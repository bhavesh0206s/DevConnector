{"ast":null,"code":"var _jsxFileName = \"/home/lav/Web Development/My-web-apps/DevConnector/client/src/components/layout/Alert.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({\n  alerts\n}) => {\n  if (alerts !== null && alerts.length > 0) {\n    const alertarray = alerts.map(alert => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: alert.id,\n        className: `alert alert-${alert.alertType}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 9\n        }\n      }, alert.msg);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, alertarray);\n}; // const Alert = ({ alerts }) =>\n//   alerts !== null &&\n//   alerts.length > 0 &&\n//   alerts.map((alert) => (\n//     <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n//       {alert.msg}\n//     </div>\n//   ));\n\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","map":{"version":3,"sources":["/home/lav/Web Development/My-web-apps/DevConnector/client/src/components/layout/Alert.js"],"names":["React","Fragment","PropTypes","connect","Alert","alerts","length","alertarray","map","alert","id","alertType","msg","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5B,MAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,MAAP,GAAgB,CAAvC,EAA0C;AACxC,UAAMC,UAAU,GAAGF,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAW;AACvC,0BACE;AAAK,QAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAoB,QAAA,SAAS,EAAG,eAAcD,KAAK,CAACE,SAAU,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,KAAK,CAACG,GADT,CADF;AAKD,KANkB,CAAnB;AAOD;;AACD,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWL,UAAX,CAAP;AACD,CAXD,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAH,KAAK,CAACS,SAAN,GAAkB;AAChBR,EAAAA,MAAM,EAAEH,SAAS,CAACY,KAAV,CAAgBC;AADR,CAAlB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,MAAM,EAAEY,KAAK,CAACR;AADoB,CAAZ,CAAxB;;AAIA,eAAeN,OAAO,CAACa,eAAD,CAAP,CAAyBZ,KAAzB,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) => {\n  if (alerts !== null && alerts.length > 0) {\n    const alertarray = alerts.map((alert) => {\n      return (\n        <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n          {alert.msg}\n        </div>\n      );\n    });\n  }\n  return <Fragment>{alertarray}</Fragment>;\n};\n\n// const Alert = ({ alerts }) =>\n//   alerts !== null &&\n//   alerts.length > 0 &&\n//   alerts.map((alert) => (\n//     <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n//       {alert.msg}\n//     </div>\n//   ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\n\nexport default connect(mapStateToProps)(Alert);\n"]},"metadata":{},"sourceType":"module"}